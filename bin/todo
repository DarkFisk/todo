#!/usr/bin/env node

/**
 * External dependencies.
 */

var argv = require('argvee')();
var fs = require('fs');
var stdin = require('stdin');

/**
 * Internal dependencies.
 */

var Storage = require('../lib/storage');

/**
 * Primary command.
 */

var command = argv.commands.shift();

// TODO: ENV var
var db = '/tmp/todos.txt';

/**
 * Internal dependencies.
 */

var todos = require('../lib/todos')(new Storage(db));

process.on('uncaughtException', function(err) {
  console.error('todo: ' + err.message);
  process.exit(1);
});

// TODO: routes

if ('ls' === command) {
  var status = 'pending';

  if (~argv.modes.indexOf('done')) status = 'done';
  if (~argv.modes.indexOf('all')) status = 'all';

  todos.list(status, argv.commands).forEach(function(todo) {
    console.log('%d. %s', todo.id, todo.desc);
  });
}

if ('add' === command) {
  var desc = argv.commands.join(' ');
  todos.create(desc);
}

if ('rm' === command) {
  var id = +argv.commands[0];
  todos.destroy(id);
}

if ('check' === command) {
  var id = +argv.commands[0];
  todos.check(id);
}

if ('undo' === command) {
  var id = +argv.commands[0];
  todos.undo(id);
}

if ('clear' === command) {
  if (~argv.modes.indexOf('force')) {
    return todos.clear();
  }

  console.log('Are you sure? (y/n)');

  stdin(function(str) {
    if ('y' === str.trim()) {
      todos.clear();
    } else {
      console.error('Aborting...');
      process.exit(1);
    }
  });
}
