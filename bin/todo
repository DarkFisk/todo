#!/usr/bin/env node

/**
 * External dependencies.
 */

var argv = require('argvee')();
var path = require('path');
var EventEmitter = require('events').EventEmitter;
var basename = path.basename;
var join = path.join;

/**
 * Internal dependencies.
 */

var Storage = require('../lib/storage');
var Todos = require('../lib/todos');
var formatter = require('../lib/formatter');

/**
 * Database path.
 *
 * Specify with environment variable `TODO_DB_PATH`.
 * The default location is `$HOME/.todo-db.json`
 */

var dbPath = process.env.TODO_DB_PATH
  ? process.env.TODO_DB_PATH
  : join(process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE, '.todo-db.json');

/**
 * Todos.
 */

var todos = new Todos(new Storage(dbPath));

/**
 * Coordinator.
 */

var coord = new EventEmitter;

/**
 * Requested command.
 */

var command = basename(argv.commands.shift() || 'ls');

/**
 * Formatter.
 */

var format = formatter(basename(process.env.TODO_FORMAT || 'simple'), coord);

/**
 * Catch all errors and print them in a nice-ish way.
 * It prints the stack when invoked with `--debug`.
 */

process.on('uncaughtException', function(err) {
  var out = ~argv.modes.indexOf('debug') && err.stack
    ? err.stack
    : 'todo: ' + err.message;

  console.error(out);
  process.exit(1);
});

/**
 * Require the requested command.
 */

try {
  var ret = require('../lib/cli/' + command)(argv, todos);
  coord.emit(command, ret);
} catch(e) {
  if ('MODULE_NOT_FOUND' !== e.code) throw e;
  throw new Error('Unrecognized command "' + command + '"');
}
